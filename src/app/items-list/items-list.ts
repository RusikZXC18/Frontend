import { Component, OnInit } from '@angular/core';
import { CommonModule } from '@angular/common';
import { FormsModule } from '@angular/forms';
import { Router } from '@angular/router';
import { Observable } from 'rxjs';
import { Project } from '../../shared/models/project.model';
import { ItemCardComponent } from '../item-card/item-card';
import { DataService } from '../../shared/services/data.service';
import { ShortenPipe } from '../../shared/pipes/shorten.pipe';

@Component({
  selector: 'app-items-list',
  standalone: true,
  imports: [CommonModule, FormsModule, ItemCardComponent, ShortenPipe],
  templateUrl: './items-list.html',
  styleUrls: ['./items-list.css']
})
export class ItemsListComponent implements OnInit {
  projects$!: Observable<Project[]>;
  searchTerm = '';
  testResults: string[] = [];

  constructor(
    private dataService: DataService,
    private router: Router
  ) {}

  ngOnInit(): void {
    this.projects$ = this.dataService.projects$;
    this.dataService.getItems().subscribe();
  }

  onSearchChange(): void {
    this.dataService.filterProjects(this.searchTerm);
  }

  onProjectSelected(project: Project): void {
    this.router.navigate(['/items', project.id]);
  }

  navigateToAdd(): void {
    this.router.navigate(['/items/new']);
  }

  runTests(): void {
    this.testResults = [];
    console.log('üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç—ñ–≤ —É ItemsListComponent...');

    try {
      this.dataService.testGetItems();
      this.testResults.push('‚úÖ DataService –ø—Ä–∞—Ü—é—î');

      ShortenPipe.testPipe();
      this.testResults.push('‚úÖ ShortenPipe –ø—Ä–∞—Ü—é—î');

      const mockProject: Project = {
        id: 10,
        name: 'Unit Test Project',
        description: '–ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ ItemCardComponent',
        details: '–¢–µ—Å—Ç–æ–≤—ñ –¥–µ—Ç–∞–ª—ñ –¥–ª—è ItemCard',
        technology: 'Angular',
        author: 'QA',
        createdAt: new Date()
      };

      const card = new ItemCardComponent();
      card.project = mockProject;
      let cardClicked = false;
      card.select.subscribe(() => (cardClicked = true));
      card.onSelect();

      if (cardClicked) {
        this.testResults.push('‚úÖ ItemCard –ø–µ—Ä–µ–¥–∞—î –ø–æ–¥—ñ—ó');
      } else {
        this.testResults.push('‚ùå ItemCard –Ω–µ –≤–∏–∫–æ–Ω—É—î –ø–æ–¥—ñ—ó');
      }

      this.dataService.filterProjects('Angular');
      this.testResults.push('‚úÖ –Ü–Ω—Ç–µ–≥—Ä–∞—Ü—ñ–π–Ω–∞ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Ñ—ñ–ª—å—Ç—Ä–∞—Ü—ñ—ó');

      console.log('üéØ –£—Å—ñ —Ç–µ—Å—Ç–∏ –≤–∏–∫–æ–Ω–∞–Ω–æ —É—Å–ø—ñ—à–Ω–æ');
    } catch (err) {
      console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ —Ç–µ—Å—Ç—ñ–≤:', err);
      this.testResults.push('‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—ñ–¥ —á–∞—Å —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è');
    }
  }
}
